name: Setup Flutter
description: Setup Flutter SDK

inputs:
  no-cache:
    description: "Whether to use the cache"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: PATH
      shell: bash
      run: |
        echo "$HOME/fvm/versions/beta/bin" >> $GITHUB_PATH
        echo "$HOME/fvm/versions/stable/bin" >> $GITHUB_PATH
        echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

    - name: Setup Homebrew
      shell: bash
      if: runner.os == 'Linux'
      run: |
        echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH

    - name: Flutter Cache
      uses: actions/cache@v4
      if: runner.os == 'Linux' && inputs.no-cache == 'true'
      with:
        path: /home/runner/fvm/versions
        key: ${{ runner.os }}-flutter-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Flutter Cache
      uses: actions/cache@v4
      if: runner.os == 'macOS' && inputs.no-cache == 'true'
      with:
        path: /Users/runner/fvm/versions
        key: ${{ runner.os }}-flutter-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Setup fvm
      shell: bash
      run: |
        brew tap leoafarias/fvm
        brew install fvm

        # Specifying a version to avoid being prompted for input
        # https://github.com/leoafarias/fvm/issues/579
        version=$(jq .flutter --raw-output .fvmrc)
        fvm install "$version"

        # If there is no .vscode directory, fvm will ask if it is a VSCode project.
        mkdir -p .vscode
        fvm use "$version" --force

        fvm doctor

    - name: Setup global packages
      shell: bash
      run: |
        dart pub global activate melos
        dart pub global activate grinder
        dart pub global activate flutterfire_cli 0.3.0-dev.19 --overwrite
